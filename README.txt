*** Текст задания из файла Задание.docx ***



Тестовое задание
на должность «Frontend-разработчик»

Требуется сверстать макет карты  (размер 980х630px, исходник «карта.psd» во вложении):
Уточнения:
1) При нажатии на кнопку "В универ" - девушка должна переходить на следующую точку (достаточно будет сделать порядка 10 переходов), анимация перехода должна быть плавной.

2) При нажатии на стрелки слайдера (влево и вправо) в блоке слева - лента должна соответственно перемещаться на 1 ячейку.

3) При нажатии на иконку«Рейтинг» (находится в правом нижнем углу) - должно сверху плавно выезжать окно «Рейтинг» (исходник окна во вложении)
Окно рейтинг:
Нужно сверстать окно отдельными элементами (фон, строки, текста, кнопки и прочее - все отдельными слоями)
В таблицу поставить данные из массива «data.rating»из файла«data.js». 
Также сделать проверку - если друг из массива «data.friends» находится в таблице рейтинга, то подсветить его имя или изменить цвет блока.

Примечания:
1) ДЕДЛАЙН выполнения задания – 4 дня с момента получения. 
Выполнение раньше поставленного срока будет являться плюсом.
2) Необходимозафиксироватьобщее время, которое было потрачено на выполнение данного тестового задания, и указать его в файле README.txt(файл положить в корне проекта)
3) Желательно использовать чистый (ванильный) js, разрешается использование библиотеки «Underscore»
4) Готовое тестовое задание необходимо отправить на почту



*** Текст README.txt после выполнения задания ***



Общее время

11/02/2021 12:30-19:00   Сделал логику карты, осталось доделать окно рейтинга.

12/02/2021 04:30-07:00   Готово.



*** Ответ работодателя (sic) 16 февр. 2021 г., 10:36 ***



Комментарии по ТЗ:
Минусы
Стилизация и структура местами хромает кода (отступы и т.д.)
местами название не очевидные
Слайдер бесконечный в пустоту
Анимация через позиционирование (top, left) из-за этого рывками
Скрипты подключены в шапке (из-за чего на проектах рендер будет ждать пока скрипты отпарсятся)
таблица рейтинга не полная
заголовок рейтинга картинкой
querySelector('.rating__frame-element-place').querySelector('.rating__frame-text') зачем два раза вызывать querySelector, не понятно
icon.classList.remove('male') и icon.classList.remove('female') зачем два раза вызывать remove, не понятно
где-то getElementsByClassName, где-то querySelector
местами странные условия (null != img_class и т.д.)

Плюсы
Друзья в рейтинге найдены
Рейтинг отсортирован
Есть комментарии
Отсутствие прокликов при переходе
есть эффект при наведении на элементы»



*** Что я думаю по этому поводу ***



Я хочу превратить этот репозиторий из безвкусной еды для корпоративного молоха в кусочек искусства, и добавлю в это редми каплю постмодерна. сразу скажу, что большую часть
пока я бодровствую в моей голове играет музыка из дарксоулса, следовательно, необходимо ожидать соответствующее проявление пафоса, вытекающего из повествования.

во-первых, скоро я сдохну от голода. путин помоги. во-вторых, не сомневаюсь, что работодателю неинтересно мое мнение. последние несколько лет мне кажется, что я сошел с ума.
я могу рассуждать об этом очень долго, но, пожалуй, скажу лишь, что если вдруг сюда заглянет кто-то, кто разделяет мое чувство глубокого одиночества, возможно, в какой-то
мере он увидит здесь отражение собственного интеллектуального прозябания, и тогда он перестанет быть столь одиноким, бо найдет во мне того бестелесного соратника, кто заочно
принимает его во скорби по утраченной легкости бытия. если же мои слова по какой-то причине не находят в его душе отклика то пашшел ты нахер каззёл, зачем ты вообще сюда
зашел. в-третьих, на самом деле я ощущаю дикий страх перед своим будущим. не хочу обнаружить себя на одной тропе с теренсом девисом, алексеем макеевым, джоником македонским
и другими прекрасными людьми. но в то же время я чувствую себя запуганным маленьким кроликом, лапка которого застряла между досок. может быть я и не хочу пищать, но это мой
единственный способ справиться с болью.

Контраргументы к минусам из ответа:

1) тз, которому я следовал бесприкословно, не содержит указаний по, кхм, стилизации и структуре кода. структура кода элементарная и при необходимости логично дробится на
   модули. другое дело, что для проекта на соответствующем этапе это не необходимо, и даже в какой то степени вредно. стилизация... тут нечего ответить. вкусовщина.

2) неочевидные название местами так же отнесу к вкусовщине, потому что чувствую, что чтобы, кхм кхм, названия стали очевидны, нужно было использовать транслитерацию, уж не
   знаю правда, какого языка, кхм да.

3) слайдер бесконечен (я думал об этом в момент реализации) по той же самой причине, почему бесконечна пустота космоса: неимение практического смысла по факту неприложимости
   конечных свойств. карчое, я не знаю, что слайдер должен делать, если в тз на этот счет нет никаких указаний.

4) у меня было три варианта (я думал об этом в момент реализации): сделать анимацию через кейфреймы (прописав вручную все делеи), сделать для каждой линии (subpath) транзишен
   (прописав вручную все делеи), или написать функцию, вычисляющую делеи самостоятельно и двигающую элемент через setInterval/requestAnimationFrame. я выбрал последнее. у меня
   анимация, если что, воспроизводится без рывков. но даже если рывки есть, от них можно избавиться, подобрав необходимые константы.

5) весь рендер происходит в, кхм, скрипте. и, да, рендер будет ждать, пока отпарсятся скрипты, но не потому что они в шапке, а потому что весь код находится внутри события 
   onload. про какие проекты идет речь я без понятия.

6) таблица рейтинга не полная (я думал об этом в момент реализации), потому что чтобы она стала полной, ее нужно растянуть или сделать прокрутку, а на ux этого нет. если бы
   я сделал прокрутку, можно было бы залупиться, что я не следую тз, и что я потратил время на ненужную фичу.

7) заголовок картинкой (я думал об этом в момент реализации), потому что в тз нет указаний о том, чтобы текст был не картинкой: на основном экране тоже есть текст, но там он
   картинкой и это нормально. я не знаю, какой шрифт используется в ux. также я знаю, что размеры экрана четко определены и не будут меняться. но в то же самое время обычный
   текст на старнице тоже есть. тем не менее, это первый пункт, с которым мне тяжело спорить.

8) чтобы не зацепить элементы с классом .rating__frame-text откуда-либо кроме .rating__frame-element-place (я думал об этом в момент реализации).

9) чтобы: а) не тратить время на проверку того, что remove принимает несколько аргументов; b) при дебаге не лезть курсором внутрь аргумента, чтобы убрать ненужную строку,
   а просто закомментировать строку целиком через шорткат (я думал об этом в момент реализации).

10) не вижу проблем использовать сразу все, но тем не менее (я думал об этом в момент реализации), чтобы использовать фичу из пункта 8.

11) эти странные, кхм, условия называются yoda-style. если имеется в виду, почему я использую == вместо === для проверки null, то это потому, что
    null == undefined != 0 != false != NaN, и это удобно, потому что в больишнстве случаев разницу между null и undefined не просто удобно не учитывать, но необходимо.


вообщем то, разбирать этот текст не имело смысла по причине пидорас. меня не взяли на работу, следовательно, эти указания можно было бы принять за проявление академической
щедрости, однако учитывая риторику, я склонен подвергнуть сомнению практическую ценность данного текста. свой же высер я прилагаю в качестве аргумента, подкрепляющего мои
сомнения. "плюсы" разобрать не могу, потому что все пункты, кроме пункта про комментарии, можно объединить в один: "следование тз", что верно. правда, я удивлен, что 
комментарии не попали в "минусы" из-за того, что написаны на английском языке с допущением грамматических ошибок. больше всего, скажу честно, у меня сгорела жопа от 
предъявления за т.н. стилистику. я очень трепетно отношусь к стилю кода, считаю, что обладаю высоким уровнем самоконтроля, что порой даже мешает полностью погрузиться в 
логику процесса. но дело даже не столько в гордыне, сколько в ценностях, которыми я живу. в программировании не так много свободы, как кажется. большинство алгоритмов уже 
написаны за тебя, а те, что пишутся мной, можно в сто крат улучшить. большинство названий для переменных предопределены и продиктованы практичностью. если программирование 
само по себе организовано ради достижения корпоративной цели, то нет свободы и в том, что из себя будет представлять программа практически. и получается, что единственная 
свобода, которая представляется прогарммисту, это стиль письма, даже не в том многообразии, что предоставляет синтаксис, но в том малом, что в конечном итоге полностью у 
тебя отнимает дефолтный линтер. да, линтер помогает сделать код идиота читабельным, но если ты не идиот, делать его читабельным ты будешь в процессе написания. если нет, 
то в чем тогда смысл того, что ты делаешь? что тогда отличает тебя от обезьяны, нажимающей на клавиши в нужном порядке? где воля творца, решающего, сколько символов 
пробела содержит табуляция?
